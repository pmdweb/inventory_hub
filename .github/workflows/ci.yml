name: CI

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  validate-branch:
    name: 🚫 Enforce develop to main PRs
    runs-on: ubuntu-latest
    if: github.base_ref == 'main' # only runs if PR is to main
    steps:
      - name: Check if head branch is develop
        run: |
          if [ "${GITHUB_HEAD_REF}" != "develop" ]; then
            echo "❌ Only PRs from develop to main are allowed."
            exit 1
          fi

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 🔧 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: 🧹 Run flake8
        run: make lint

  type-check:
    name: Type Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 🔧 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: 🔍 Run mypy
        run: make types

  tests:
    name: Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 🔧 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: 🧹 Clean previous coverage
        run: |
          rm -f .coverage*
          rm -rf htmlcov

      - name: 🧪 Run tests
        run: make test

      # 📤 Save coverage.xml for the next job
      - name: 📤 Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 🔧 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-coverage
